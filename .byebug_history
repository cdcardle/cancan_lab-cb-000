exit
Note.all
Note.none
response.date
response.stream
response.request
response.content_type
exit
response.status
response.statis
exit
response.status
response.from_response
response.keys
response.size
response.params
responseparams
params
response.body
response
exit
session[:user_id]
response.session
request.session
session
exit
variant
response.variant
response.header
response
respons
response.condense
response.keys
response['dogshit']
response['dogshit]
response[:variant]
response[variant]
response['variant']
response['variable']
response[variable]
response.variable
response
exit
response.unauthorized?
response.authorized?
response
response.format
response.json
response.size
response
exit
note.save!
note.user
note.user = current_user
note.user
note = Note.new(note_params)
note
current_user
session
params
exit
alice_to_beth.readers
alice_to_beth.readers.size
alice_to_beth.viewers.size
alice_to_beth.viewers
exit
alice_to_beth.viewers
alice_to_beth.viewers.find_by(user_id: users[:beth].id)
alice_to_beth.viewers
a
b = users[:beth]
users[:beth]
b = users[:beth]
a = _
alice_to_beth
alice_to-beth
users[:beth].id
users[:beth].viewers
users[:beth].notes
users[:beth]
users
users.map{|u| u}
users.map{|u| u.name}
user.map{|u| u.name}
users[3]
users[0]
users[1]
users.second
users.size
users["beth"]
users
User.all
user
b = User.find_by(name: "beth")
beth
:beth
alice_to_beth.viewers
alice_to_beth
abilities[:beth].can? :read, alice_to_beth
abilities[:beth]
abilities
exit
alice_to_beth.viewers.include?(user)
alice_to_beth.viewers
alice_to_beth
note
user
next
abilities[:beth]
abilities
note
beth
user
next
note
user
next
q
note.viewers
user
note
exit
user.id
note.user_id
note
user
exit
note
name
user
exit
private_notes[name].viewers
private_notes[name]
private_notes[:alice]
private_notes
abilities[name].can? :read, private_notes[name]
abilities[name]
user
name
abilities[name]
abilities[name].size
abilities[name]
private_notes[name]
private_notes[:alice]
abilities[name].can? :read
abilities[name].can? :read, private_notes[name]
abilities[name].can?
abilities[name]
name
user
exit
Note.all
User.all
user
exit
Note.all
User.all
exit
Viewer.all
Viewers.all
Note.all
User.all
exit
User.all
exit
exit]
User.all
exit
User.all
exit
User.all
exit
User.all
